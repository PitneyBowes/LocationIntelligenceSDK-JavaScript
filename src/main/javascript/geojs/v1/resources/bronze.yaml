styles:

    dashed-lines:
        base: lines
        dash: [2, 2]

    dashed-lines-states:
        base: lines
        dash: [3, 2]
    
    rail-dashed-lines:
        base: lines
        dash: [ 0.5, 4 ]

    ferry-dash:
        base: lines
        dash: [ 2, 2 ]

    fonts:
        Open Sans: external
        url: <link href='css.css' rel='stylesheet' type='text/css'>

sources:
    mapzen:
        type: MVT
        url: https://api.pitneybowes.com/location-intelligence/geomap/v1/tile/osm/{z}/{x}/{y}.mvt?api_key={Enter your api key here}
#------------------------------------------------
layers:

    water:
        data: { source: mapzen, $zoom: { max: 10 } }
        draw:
            polygons:
                order: 2
                color: rgb(102, 170, 212)

    water:
        data: { source: mapzen, $zoom: { min: 10 } }
        draw:
            polygons:
                order: 3
                color: rgb(146, 189, 211)

    ocean-labels:
        data: { source: mapzen, layer: water }
        filter: { kind: ocean }
        draw:
            text:
                text_source: function() { return feature["name:short"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(50, 85, 100)
                    size: 15px
                    style: italic
                    #transform: uppercase

    rivers:
        data: { source: mapzen, layer: water }
        filter: { kind: river }
        draw:
            lines:
                order: 2
                color: rgb(146, 189, 211)
                width: [ [9, 1px], [11, 2px], [16, 4px] ]

    streams:
        data: { source: mapzen, layer: water }
        filter: { kind: stream, $zoom: { min: 15 } }
        draw:
            lines:
                order: 2
                color: rgb(146, 189, 211)
                width: 2px

    earth:
        data: { source: mapzen }
        draw:
            polygons:
                order: 0
                color: [ [0, 'rgb(247, 247, 249)'], [8, 'rgb(244, 244, 246)'] ]
            lines:
                width: 2px
                color: [ [0, 'rgb(247, 247, 249)'], [8, 'rgb(244, 244, 246)'] ]

    landuse:
        data: { source: mapzen }
        filter: 
            any:
                - kind: park
                - kind: natural_forest
                - kind: national_park
                - kind: natural_park
        draw:
            polygons:
                order: 1
                color: rgb(173, 216, 188)

                # add labels

    parks:
        data: { source: mapzen, layer: landuse }
        filter: { kind: park }

        parks-size:
            filter:
                any:
                - { $zoom: [12],   area: { min: 3000000 } }
                - { $zoom: [13],   area: { min: 5000 } }
                - { $zoom: [14],   area: { min: 5000 } }
                - { $zoom: [15],   area: { min: 2000 } }
                - { $zoom: [16],   area: { min: 0 } }
                - { $zoom: [17],   area: { min: 0 } }
                - { $zoom: [18],   area: { min: 0 } }
                - { $zoom: [19],   area: { min: 0 } }
                - { $zoom: [20],   area: { min: 0 } }
                - { $zoom: [21],   area: { min: 0 } }
                - { $zoom: [22],   area: { min: 0 } }
                - { $zoom: [23],   area: { min: 0 } }
                - { $zoom: [24],   area: { min: 0 } }
            draw:
                polygons:
                    order: 1
                    color: rgb(188,231,209)

    boundaries:
        data: { source: mapzen, layer: boundaries }
        countries:
            filter: { kind: country }
            draw:
                lines:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [5, 1px], [7, 2px], [10, 3px] ]

    boundaries-disputed:
        data: { source: mapzen, layer: boundaries }
        countries:
            filter: { kind: disputed }
            draw:
                dashed-lines:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [5, 1px], [7, 2px], [10, 3px] ]

        states:
            filter: { kind: region, scalerank: [1, 2, 3, 4], $zoom: { max: 9 } }
            draw:
                lines:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [5, 1px], [6, 1.5px], [9, 2px] ]

        US-states:
            filter: { kind: region, scalerank: false, $zoom: { max: 9 } }
            draw:
                lines:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [5, 1px], [6, 1.5px], [9, 2px] ]

        states-low:
            filter: { kind: region, scalerank: [5, 6, 7, 8, 9, 10], $zoom: { min: 8, max: 9 } }
            draw:
                lines:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [5, 1px], [6, 1.5px], [9, 2px] ]


        states-dash:
            filter: { kind: region, scalerank: [1, 2, 3, 4], $zoom: { min: 9 } }
            draw:
                dashed-lines-states:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [9, 2px], [14, 3px] ]

        US-states-dash:
            filter: { kind: region, scalerank: false, $zoom: { min: 9 } }
            draw:
                dashed-lines-states:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [9, 2px], [14, 3px] ]

        states-low-dash:
            filter: { kind: region, scalerank: [5, 6, 7, 8, 9, 10], $zoom: { min: 9 } }
            draw:
                dashed-lines-states:
                    order: 1
                    color: rgb(176, 176, 176)
                    width: [ [9, 2px], [14, 3px] ]

 #------------------------------------------------

    country-labels:
        data: { source: mapzen , layer: places }
        filter: { kind: country }

        30M+:
            filter: { population: { min: 30000000 }, $zoom: { min: 3, max: 8} }
            draw:
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: [ [3, 8pt], [4, 10pt], [5, 16pt], [6, 20pt] ]
                        family: Open Sans
                        fill: rgb(80, 80, 80)
                        weight: bold
                        transform: uppercase

        10Mto30M:
            filter: { population: { min: 10000000, max: 30000000 }, $zoom: { min: 4, max: 8} }
            draw:
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: [ [4, 10pt], [5, 12pt], [6, 16pt] ]
                        family: Open Sans
                        fill: rgb(80, 80, 80)
                        weight: bold
                        transform: uppercase
                        
        Below10M:
            filter: { population: { max: 10000000, min: 5000000 }, $zoom: { min: 5, max: 8} }
            draw:
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: [ [5, 10pt], [6, 12pt], [7, 16pt] ]
                        family: Open Sans
                        fill: rgb(80, 80, 80)
                        weight: bold
                        transform: uppercase

        Below5M:
            filter: { population: { max: 5000000 }, $zoom: { min: 6, max: 9} }
            draw:
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: [ [6, 10pt], [7, 12pt], [8, 16pt] ]
                        family: Open Sans
                        fill: rgb(80, 80, 80)
                        weight: bold
                        transform: uppercase


    state-labels:
        data: { source: mapzen , layer: places }
        filter: { kind: region, name: ["Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Georgia", "Idaho", "Illinois", "Indiana", "Iowa","Kansas", "Kentucky", "Louisiana", "Maine", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Virginia", "Washington","West Virginia", "Wisconsin", "Wyoming" ],  $zoom: { min: 4, max: 6 } }
        draw:
            text:
                text_source: function() { return feature["name:short"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(130, 130, 130)
                    size: [ [4,10px], [5, 12px], [6, 14px], [7, 16px] ]
                    weight: bold
                    transform: uppercase

    state-labels-2:
        data: { source: mapzen , layer: places }
        filter: { kind: region, name: ["Acre", "Alagoas", "Amazonas","Amapá", "Bahia", "Ceará","Distrito Federal", "Espírito Santo","Goiás","Maranhão","Minas Gerais","Mato Grosso do Sul","Mato Grosso","Pará","Paraíba","Pernambuco","Piauí","Paraná","Rio de Janeiro","Rio Grande do Norte","Rondônia","Roraima","Rio Grande do Sul","Santa Catarina","Sergipe","São Paulo","Tocantins", "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Georgia", "Idaho", "Illinois", "Indiana", "Iowa","Kansas", "Kentucky", "Louisiana", "Maine", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Virginia", "Washington","West Virginia", "Wisconsin", "Wyoming", "Vermont", "New Hampshire", "Massachussetts", "Alberta", "British Columbia","Manitoba","New Brunswick","Newfoundland and Labrador","Nova Scotia","Ontario","Prince Edward Island","Québec","Saskatchewan","Northwest Territories","Nunavut","Yukon", "New South Wales", "Queensland", "South Australia","Tasmania","Victoria","Western Australia","Australian Capital Territory","Northern Territory" ],  $zoom: { min: 6, max: 7 } }
        draw:
            text:
                text_source: function() { return feature["name:abbreviation"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(130, 130, 130)
                    size: [ [4,10px], [5, 12px], [6, 14px], [7, 16px] ]
                    weight: bold
                    transform: uppercase

    state-labels-3:
        data: { source: mapzen , layer: places }
        filter: { kind: region, name: ["Connecticut", "Rhode Island", "Massachusetts"],  $zoom: { min: 7, max: 9 } }
        draw:
            text:
                text_source: function() { return feature["name:short"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(130, 130, 130)
                    size: [ [4,10px], [5, 12px], [6, 14px], [7, 16px] ]
                    weight: bold
                    transform: uppercase

    state-names:
        data: { source: mapzen , layer: places }
        filter: { kind: region, $zoom: { min: 7, max: 9 }, name: [ "Acre", "Alagoas", "Amazonas","Amapá", "Bahia", "Ceará","Distrito Federal", "Espírito Santo","Goiás","Maranhão","Minas Gerais","Mato Grosso do Sul","Mato Grosso","Pará","Paraíba","Pernambuco","Piauí","Paraná","Rio de Janeiro","Rio Grande do Norte","Rondônia","Roraima","Rio Grande do Sul","Santa Catarina","Sergipe","São Paulo","Tocantins", "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Georgia", "Idaho", "Illinois", "Indiana", "Iowa","Kansas", "Kentucky", "Louisiana", "Maine", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Virginia", "Washington","West Virginia", "Wisconsin", "Wyoming", "Vermont", "New Hampshire", "Massachussetts", "Aguascalientes","Baja California","Baja California Sur","Chihuahua","Colima","Campeche","Coahuila","Chiapas","Federal District","Durango","Guerrero","Guanajuato","Hidalgo","Jalisco","México State","Michoacán","Morelos","Nayarit","Nuevo León","Oaxaca","Puebla","Querétaro","Quintana Roo", "Sinaloa","San Luis Potosí","Sonora","Tabasco","Tlaxcala","Tamaulipas","Veracruz","Yucatán","Zacatecas", "Alberta", "British Columbia","Manitoba","New Brunswick","Newfoundland and Labrador","Nova Scotia","Ontario","Prince Edward Island","Québec","Saskatchewan","Northwest Territories","Nunavut","Yukon", "Andhra Pradesh", "Arunachal Pradesh","Assam","Bihar","Chhattisgarh", "Goa","Gujarat","Haryana","Himachal Pradesh","Jammu and Kashmir","Jharkhand","Karnataka","Kerala","Madhya Pradesh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim", "Tamil Nadu","Telangana","Tripura","Uttarakhand","Uttar Pradesh", "West Bengal","Andaman and Nicobar Islands","Chandigarh","Dadra and Nagar Haveli","Daman and Diu","Delhi","Lakshadweep","Puducherry", "New South Wales", "Queensland", "South Australia","Tasmania","Victoria","Western Australia","Australian Capital Territory","Northern Territory" ] }
        draw:
            text:
                text_source: function() { return feature["name:name"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(130, 130, 130)
                    size: [ [4,10px], [5, 12px], [6, 14px], [7, 16px], [8, 18px] ]
                    weight: bold
                    transform: uppercase

    state-names-china:
        data: { source: mapzen , layer: places }
        filter: { kind: region, $zoom: { min: 7, max: 9 }, name:en: [ "Beijing Municipality", "Tianjin Municipality", "Hebei Province", "Shanxi Province", "Inner Mongolia Autonomous Region", "Liaoning Province", "Jilin Province", "Heilongjiang Province", "Shanghai Municipality", "Jiangsu Province", "Zhejiang Province", "Anhui Province","Fujian Province", "Jiangxi Province", "Shandong Province", "Henan Province", "Hubei Province", "Hunan Province", "Guangdong Province", "Guangxi Zhuang Autonomous Region", "Hainan Province", "Chongqing Municipality", "Sichuan Province", "Guizhou Province", "Yunnan Province", "Tibet Autonomous Region", "Shaanxi Province", "Gansu Province", "Qinghai Province", "Ningxia Hui Autonomous Region", "Xinjiang Uyghur Autonomous Region", "Hong Kong Special Administrative Region", "Macau Special Administrative Region" ] }
        draw:
            text:
                text_source: function() { return feature["name:en"] || feature["name"]; }
                collide: true
                font:
                    family: Open Sans
                    fill: rgb(130, 130, 130)
                    size: [ [4,10px], [5, 12px], [6, 14px], [7, 16px], [8, 18px] ]
                    weight: bold
                    transform: uppercase        

#------------------------------------------------

    populated-places-naturalearth:
        data: { source: mapzen , layer: places}
        filter: 
            any:
                - kind: locality
                - country_capital: true

        5M+:
            filter: { $zoom: { min: 4, max: 8 }, population: { min: 5000000 } }
            draw:
                points:
                    collide: true
                    color: [0.580, 0.624, 0.659, 1.00]
                    size: 5px
                    priority: 1
                    text:
                        collide: true
                        priority: 1
                        anchor: [top-right, top-left, bottom-right, bottom-left]
                        font:
                            size: [[4, 10pt], [5, 10pt], [6, 12pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            order: 70

        5to2.5M:
            filter: { $zoom: { min: 4, max: 8 }, population: { max: 5000000, min: 2500000 } }
                #add scale rank 0
            draw:
                points:
                    collide: true
                    color: [0.580, 0.624, 0.659, 1.00]
                    size: 5px
                    priority: 2
                    text:
                        collide: true
                        priority: 2
                        anchor: [top-right, top-left, bottom-right, bottom-left]
                        font:
                            size: [[4, 8pt], [5, 8pt], [6, 10pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            #transform: uppercase
                            order: 69

        2.5to750K:
            filter: { $zoom: { min: 6, max: 8 }, population: { min: 750000, max: 2500000 } }
                #scale rank 1/2
            draw:
                points:
                    #collide: true
                    color: [0.580, 0.624, 0.659, 1.00]
                    size: 5px
                    priority: 3
                    text:
                        collide: true
                        priority: 3
                        anchor: [top-right, top-left, bottom-right, bottom-left]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            #weight: bold
                            order: 68

        750to250K:
            filter: { $zoom: { min: 7, max: 8 }, population: { min: 200000, max: 750000 } }
                #scale rank 1/2
            draw:
                points:
                    #collide: true
                    color: [0.580, 0.624, 0.659, 1.00]
                    size: 5px
                    priority: 4
                    text:
                        collide: true
                        priority: 4
                        anchor: [top-right, top-left, bottom-right, bottom-left]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            #weight: bold
                            order: 67

#------------------------------------------------


    neighborhoods: 
        data: { source: mapzen , layer: places }
        filter: 
            any:
                - kind: neighbourhood
                - kind: suburb

        neighborhoods-0:
            filter: { $zoom: { min: 13 }, not: { name: [ "Manhattan", "Queens", "Brooklyn", "The Bronx", "Staten Island" ] } }
            draw:
                text:
                        collide: true
                        anchor: center
                        #anchor: [top-left, top-right, bottom-left, bottom-right]
                        #offset: [0px, 0px]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(112, 112, 112)
                            weight: bold
                            transform: uppercase
                            order: 50

        neighborhoods-2:
            filter: { $zoom: { min: 14 }, not: { name: [ "Manhattan", "Queens", "Brooklyn", "The Bronx", "Staten Island" ] } }
            draw:
                text:
                        collide: true
                        anchor: center
                        #anchor: [top-left, top-right, bottom-left, bottom-right]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(112, 112, 112)
                            weight: bold
                            #transform: uppercase
                            order: 50

        NYC:
            filter: { kind: suburb, name: [ "Manhattan", "Queens", "Brooklyn", "The Bronx", "Staten Island" ], $zoom: { min: 9 }  }
            draw:
                text:
                        collide: true
                        anchor: center
                        #anchor: [top-left, top-right, bottom-left, bottom-right]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(112, 112, 112)
                            weight: bold
                            transform: uppercase
                            order: 50

#------------------------------------------------

    populated-places-osm:
        data: { source: mapzen , layer: places}
        filter: 
            any:
                - kind: locality
                - kind_detail: village
                - kind: locality
                - kind_detail: hamlet


        ctv-2M+:
            filter: { $zoom: { min: 8, max: 13 }, population: true, population: { min: 2000000 }  }
            draw:
                points:
                    color: [0.353, 0.882, 0.420, 0.00]
                    size: [ [8, 10px], [12, 60px] ]
                    priority: 1
                    text:
                        text_wrap: 10
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        anchor: [center, top, bottom, left, right]
                        font:
                            size: [[4, 10pt], [5, 10pt], [6, 12pt], [10, 15pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        ctv-2M-250K:
            filter: { $zoom: { min: 8, max: 13 }, population: true, population: { max: 2000000, min: 250000 } }
            draw:
                points:
                    color: [0.353, 0.882, 0.420, 0.00]
                    size: [ [8, 10px], [12, 60px] ]
                    priority: 2
                    text:
                        text_wrap: 10
                        anchor: [center, top, bottom, left, right]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: 12pt #[[4, 8pt], [5, 8pt], [6, 10pt], [10, 12pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        ctv-250K-75K:
            filter: { $zoom: { min: 8, max: 13 }, population: true, population: { max: 250000, min: 75000 } }
            draw:
                points:
                    color: [0.353, 0.882, 0.420, 0.00]
                    size: 60px
                    priority: 3
                    text:
                        anchor: [center, top, bottom]
                        text_wrap: 10
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: 10pt #[[8, 8pt], [10, 10pt], [13, 10pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        cities-small:
            filter: { $zoom: { min: 8, max: 14 }, kind: locality, population: true, population: { max: 74900, min: 0 } }
                #scale rank 1/2
            draw:
                points:
                    color: [0.353, 0.882, 0.420, 0.00]
                    size: 60px
                    priority: 4
                    text:
                        text_wrap: 10
                        anchor: [center, top, bottom]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: 8pt #[[8, 8pt], [10, 8pt], [13, 10pt]]
                            family: Open Sans
                            fill: rgb(105, 105, 105) 
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        cities-no-pop:
            filter: { $zoom: { min: 10, max: 13 }, kind: locality, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9], population: false}
                #scale rank 1/2
            draw:
                points:
                    collide: true
                    color: [0.353, 0.882, 0.420, 0.00]
                    size: [ [10, 100px], [11, 60px] ]
                    priority: 10
                    text:
                        anchor: [center, top, bottom]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        localitys-75K-15K:
            filter: { $zoom: { min: 8, max: 14 }, kind: locality, population: true, population: { max: 74999, min: 15000 } }
                #scale rank 1/2
            draw:
                points:
                    color: [0.500, 0.000, 0.000, 0.00]
                    size: 80px
                    priority: 9
                    text:
                        anchor: [center, top, bottom, left, right]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: [ [8, 8pt], [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        localitys-small:
            filter: { $zoom: { min: 9, max: 15 }, kind: locality, population: true, population: { max: 15000 } }
                #scale rank 1/2
            draw:
                points:
                    color: [1.000, 0.000, 0.000, 0.00]
                    size: 120px
                    priority: 11
                    text:
                        anchor: center
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: [ [9, 8pt], [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        localitys-no-pop:
            filter: { $zoom: { min: 10, max: 15 }, kind: locality, population: false } 
            draw:
                points:
                    color: [1.000, 0.000, 0.000, 0.00]
                    size: 120px
                    priority: 12
                    text:
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        anchor: center
                        font:
                            size: [ [9, 8pt], [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        villages-75K-15K:
            filter: { $zoom: { min: 11, max: 15 }, kind_detail: village, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9], population: true, population: { max: 75000, min: 15000 } }
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.000, 0.502, 0.00]
                    size: [ [11, 100px], [12, 80px], [13, 80px] ]
                    priority: 15
                    text:
                        anchor: [center, top, bottom, left, right]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: [ [11, 8pt], [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        villages-15K-5K:
            filter: { $zoom: { min: 11, max: 16 }, kind_detail: village, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9, 10], population: true, population: { max: 15000, min: 5000 } }
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.000, 0.502, 0.00]
                    size: [ [11, 150px], [12, 100px], [13, 80px] ]
                    priority: 16
                    text:
                        anchor: [center, top, bottom, left, right]
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: [ [11, 8pt], [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        villages-small:
            filter: { $zoom: { min: 12, max: 16 }, kind_detail: village, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9, 10], population: true, population: { max: 5000 } }
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.000, 0.502, 0.00]
                    size: [ [11, 150px], [12, 150px], [13, 100px] ]
                    priority: 17
                    text:
                        anchor: center
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: [ [12, 8pt], [15, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px
                            
        villages-no-pop:
            filter: { $zoom: { min: 12, max: 16 }, kind_detail: village, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9, 10], population: false } 
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.000, 0.502, 0.00]
                    size: [ [11, 100px], [12, 150px], [13, 80px] ]
                    priority: 18
                    text:
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        anchor: center
                        font:
                            size: 8pt #[ [9, 8pt], [12, 8pt], [13, 10pt], [14, 12pt] ]
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            weight: bold
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        hamlets-mini+:
            filter: { $zoom: { min: 13, max: 15 }, kind_detail: hamlet, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9, 10], population: true, population: true }
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.502, 0.502, 0.00]
                    size: 100px
                    priority: 19
                    text:
                        anchor: center
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

        hamlets-no-pop:
            filter: { $zoom: { min: 13, max: 15 }, kind_detail: hamlet, min_zoom: [2, 3, 4, 5, 6, 7, 8, 9, 10], population: false } 
                #scale rank 1/2
            draw:
                points:
                    color: [0.502, 0.502, 0.502, 0.00]
                    size: 120px
                    priority: 20
                    text:
                        text_source: function() { return feature["name:en"] || feature["name"]; }
                        anchor: center
                        #anchor: [top-left, top-right, bottom-left, bottom-right]
                        font:
                            size: 8pt
                            family: Open Sans
                            fill: rgb(105, 105, 105)
                            stroke:
                                color: rgb(247, 247, 249)
                                width: 2px

#------------------------------------------------

    urbanareas: 
        data: { source: mapzen, layer: landuse }
        filter: { kind: urban area }

        highzoom:
            filter: { $zoom: { max: 8 } }
            draw:
                polygons:
                    order: 1
                    color: rgb(236, 236, 236)


#------------------------------------------------

    naturalearthroads:
        data: { source: mapzen , layer: roads}
        filter: { $zoom: { min: 5, max: 8 } }
        draw:
            lines:
                order: 2
                color: rgb(242, 170, 121)
                width: 1.5px
                
#------------------------------------------------

    airports:
        data: { source: mapzen , layer: roads} 
        runway:
            filter: { aeroway: runway, $zoom: { min: 11 } }
            draw:
                lines:
                    order: 40
                    color: [0.825, 0.825, 0.825, 1.00]
                    width: [ [12, 1.5px], [14, 4px], [15, 10px], [18, 50px] ]
        taxiway:
            filter: { kind_detail: taxiway, $zoom: { min: 11 } }
            draw:
                lines:
                    order: 40
                    color: [0.825, 0.825, 0.825, 1.00]
                    width: [ [12, 1.5px], [14, 3px], [15, 6px], [18, 40px] ]
                    join: round
                    cap: round
    
    airports-poi:
        data: { source: mapzen , layer: pois}
        
        poi-label-airport:
            filter: { $zoom: { min: 12 }, area: { min: 1000000 } }
            draw:
                 text:
                    text_source: function() { return feature["iata"] || feature["iata"]; }
                    collide: true
                    anchor: center
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, 0px]
                    text_wrap: 20
                    font:
                        size: 12pt
                        family: Open Sans
                        fill: [0.635, 0.643, 0.659, 1.00]
                        weight: bold
                        order: 543
                        stroke: { color: white, width: 2 }

#------------------------------------------------

    roads:
        data: { source: mapzen , layer: roads}

        motorway-high:
            filter: { kind_detail: motorway, $zoom: { min: 8, max: 14 } }
            draw:
                lines:
                    order: 100
                    color: [ [ 15, 'rgb(242, 170, 121)' ], [ 17, 'rgb(232, 194, 167)' ] ]  
                    width: [ [8, 1.5px], [10, 2px], [11, 2px], [13, 2.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [8, 'rgb(238, 103, 0)'], [15, 'rgb(229, 137, 69)'], [17, 'rgb(204, 103, 18)'] ]
                        width: [ [9, 0.5px], [11, 1px], [12, 1px]]
                        join: round
                        order: 100
                        cap: butt

        motorway:
            filter: { kind_detail: motorway, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [ 15, 'rgb(242, 170, 121)' ], [ 17, 'rgb(232, 194, 167)' ] ]  
                    width: [ [8, 1px], [10, 1px], [11, 1.5px], [13, 3.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [8, 'rgb(238, 103, 0)'], [15, 'rgb(229, 137, 69)'], [17, 'rgb(204, 103, 18)'] ]
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: 15
                        cap: butt

        motorway-bridge:
            filter: { kind_detail: motorway, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [ 15, 'rgb(242, 170, 121)' ], [ 17, 'rgb(232, 194, 167)' ] ]  
                    width: [ [8, 1px], [10, 1px], [11, 1.5px], [13, 3.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [8, 'rgb(238, 103, 0)'], [15, 'rgb(229, 137, 69)'], [17, 'rgb(204, 103, 18)'] ]
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        motorway-tunnel:
            filter: { kind_detail: motorway, is_tunnel: true, $zoom: { min: 8 } }
            draw:
                lines:
                    color: [0.85, 0.85, 0.85, 1.00]

        motorway-link-tunnel:
            filter: { kind_detail: motorway_link, is_tunnel: true, $zoom: { min: 14 } }
            draw:
                lines:
                    color: [0.85, 0.85, 0.85, 1.00]

        motorway-link:
            filter: { kind_detail: motorway_link, is_link: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [ 15, 'rgb(242, 170, 121)' ], [ 17, 'rgb(232, 194, 167)' ] ]  
                    width: [ [12, 1px], [13, 1.5px], [15, 3px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [14, 'rgb(238, 103, 0)'], [15, 'rgb(229, 137, 69)'], [17, 'rgb(204, 103, 18)'] ]
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: 15
                        cap: butt

        motorway-link-bridge:
            filter: { kind_detail: motorway_link, is_link: true, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [ 15, 'rgb(242, 170, 121)' ], [ 17, 'rgb(232, 194, 167)' ] ]  
                    width: [ [12, 1px], [13, 1.5px], [15, 3px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [14, 'rgb(238, 103, 0)'], [15, 'rgb(229, 137, 69)'], [17, 'rgb(204, 103, 18)'] ]
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        trunk-high:
            filter: { kind_detail: trunk, $zoom: { min: 8, max: 14 } }
            draw:
                lines:
                    order: 99
                    color: [  [ 15, 'rgb(249, 220, 155)' ], [ 17, 'rgb(244, 229, 195)' ] ]  
                    width: [ [8, 1px], [10, 1.5px], [11, 1.5px], [13, 2.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [ 14, 'rgb(237, 183, 94)' ], [ 15, 'rgb(214, 179, 107)' ], [ 17, 'rgb(221, 187, 127)' ] ]  
                        width: [ [9, 0.5px], [11, 1px], [12, 1px]]
                        join: round
                        order: 99
                        cap: butt  

        trunk:
            filter: { kind_detail: trunk, $zoom: { min: 8 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [  [ 15, 'rgb(249, 220, 155)' ], [ 17, 'rgb(244, 229, 195)' ] ]  
                    width: [ [8, 1px], [10, 1.5px], [11, 1.5px], [13, 3.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [ 14, 'rgb(237, 183, 94)' ], [ 15, 'rgb(214, 179, 107)' ], [ 17, 'rgb(221, 187, 127)' ] ]  
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: 15
                        cap: butt                    

        trunk-bridge:
            filter: { kind_detail: trunk, is_bridge: true, $zoom: { min: 8 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [  [ 15, 'rgb(249, 220, 155)' ], [ 17, 'rgb(244, 229, 195)' ] ]  
                    width: [ [8, 1px], [10, 1.5px], [11, 1.5px], [13, 3.5px], [14, 4px], [15, 6px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [ 14, 'rgb(237, 183, 94)' ], [ 15, 'rgb(214, 179, 107)' ], [ 17, 'rgb(221, 187, 127)' ] ]  
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt  

        trunk-tunnel:
            filter: { kind_detail: trunk, is_tunnel: true, $zoom: { min: 8 } }
            draw:
                lines:
                    color: [0.85, 0.85, 0.85, 1.00]

        trunk-labels:
            filter: { kind_detail: trunk, $zoom: { min: 12 } }
            draw:                
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    line_exceed: 70%
                    articulated: true
                    spread_factor: 0.5
                    placement: one
                    collide: true
                    anchor: center
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, -1px]
                    repeat_distance: 500px
                    font:
                        size: 8pt
                        family: Open Sans
                        fill: rgb(110, 110, 110)
                        #weight: bold
                        order: 543
                        stroke: { color: rgb(247, 247, 249), width: 2 }

        tunk-link:
            filter: { kind_detail: trunk_link, is_link: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [  [ 15, 'rgb(249, 220, 155)' ], [ 17, 'rgb(244, 229, 195)' ] ]  
                    width: [ [12, 1px], [13, 1.5px], [15, 3px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [ 14, 'rgb(237, 183, 94)' ], [ 15, 'rgb(214, 179, 107)' ], [ 17, 'rgb(221, 187, 127)' ] ]  
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: 15
                        cap: butt

        tunk-link-bridge:
            filter: { kind_detail: trunk_link, is_link: true, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [  [ 15, 'rgb(249, 220, 155)' ], [ 17, 'rgb(244, 229, 195)' ] ]  
                    width: [ [12, 1px], [13, 1.5px], [15, 3px], [18, 18px], [20, 60px] ]
                    join: round
                    cap: round
                    outline:
                        color: [ [ 14, 'rgb(237, 183, 94)' ], [ 15, 'rgb(214, 179, 107)' ], [ 17, 'rgb(221, 187, 127)' ] ]  
                        width: [ [9, 0px], [11, 1px], [12, 1.5px]]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        primary-high:
            filter: { kind_detail: primary, $zoom: { min: 8, max: 14 } }
            draw:
                lines:
                    order: 98
                    color: [ [9, 'rgb(235, 235, 235)'],  [10, 'rgb(255, 255, 255)' ] ]
                    width: [ [8, 1.5px], [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(190, 190, 190)
                        width: [ [9, 0px], [10, 0.5px], [13, 1.5px] ]
                        join: round
                        order: 98
                        cap: butt

        primary:
            filter: { kind_detail: primary, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [9, 'rgb(235, 235, 235)'],  [10, 'rgb(255, 255, 255)' ] ]
                    width: [ [8, 1.5px], [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(190, 190, 190)
                        width: [ [9, 0px], [10, 0.5px], [13, 1.5px] ]
                        join: round
                        order: 15
                        cap: butt

        primary-bridge:
            filter: { kind_detail: primary, is_bridge: true, $zoom: { min: 8 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: [ [9, 'rgb(235, 235, 235)'],  [10, 'rgb(255, 255, 255)' ] ]
                    width: [ [8, 1.5px], [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(190, 190, 190)
                        width: [ [9, 0px], [10, 0.5px], [13, 1.5px] ]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        primary-labels:
            filter: { kind_detail: primary, $zoom: { min: 12 } }
            draw:
                text:
                    line_exceed: 70%
                    articulated: true
                    spread_factor: 0.5
                    placement: one
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    collide: true
                    anchor: center
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, -1px]
                    repeat_distance: 500px
                    font:
                        size: 8pt
                        family: Open Sans
                        fill: rgb(110, 110, 110)
                        #weight: bold
                        order: 543
                        stroke: { color: rgb(247, 247, 249), width: 2 }

        primary-link:
            filter: { kind_detail: primary_link, is_link: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(190, 190, 190)
                        width: 1.5px
                        join: round
                        order: 15
                        cap: butt

        primary-link:
            filter: { kind_detail: primary_link, is_link: true, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(190, 190, 190)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        secondary:
            filter: { kind_detail: secondary, $zoom: { min: 12 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: 15
                        cap: butt

        secondary-bridge:
            filter: { kind_detail: secondary, is_bridge: true, $zoom: { min: 12 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        secondary-labels:
            filter: { kind_detail: secondary, $zoom: { min: 14 } }
            draw:
                text:
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    line_exceed: 70%
                    articulated: true
                    spread_factor: 0.5
                    placement: one
                    collide: true
                    anchor: center
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, -1px]
                    repeat_distance: 500px
                    font:
                        size: 8pt
                        family: Open Sans
                        fill: rgb(110, 110, 110)
                        #weight: bold
                        order: 543
                        stroke: { color: rgb(247, 247, 249), width: 2 }

        secondary-link:
            filter: { kind_detail: secondary_link, is_link: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: [ [8, 0px], [9, 1.5px], [18, 3px] ]
                        join: round
                        order: 15
                        cap: butt

        secondary-link-bridge:
            filter: { kind_detail: secondary_link, is_link: true, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: [ [8, 0px], [9, 1.5px], [18, 3px] ]
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        major-roads:
            filter: { not: { kind: ferry }, kind: major_road, $zoom: { max: 13 } }
            draw:
                lines:
                    order: 0
                    color: rgb(204, 204, 204)
                    width: [ [12, 1px], [14, 1px], [15, 2px] ]

        major:
            filter: { not: { kind: ferry }, kind: major_road, $zoom: { min: 13 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: 15
                        cap: butt

        major-bridge:
            filter: { not: { kind: ferry }, kind: major_road, is_bridge: true, $zoom: { min: 13 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [13, 1.5px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        major-labels:
            filter: { kind: major_road, $zoom: { min: 15 } }
            draw:
                text:
                    line_exceed: 70%
                    articulated: true
                    spread_factor: 0.5
                    placement: one
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    collide: true
                    anchor: center
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, -1px]
                    repeat_distance: 500px
                    font:
                        size: 8pt
                        family: Open Sans
                        fill: rgb(110, 110, 110)
                        #weight: bold
                        order: 543
                        stroke: { color: rgb(247, 247, 249), width: 2 }           

        major-link:
            filter: { kind: major_road, is_link: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: 15
                        cap: butt

        major-link-bridge:
            filter: { kind: major_road, is_link: true, is_bridge: true, $zoom: { min: 14 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [14, 2px], [15, 4px], [18, 12px], [20, 30px] ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt


        minor-roads-high:
            filter: { not: { kind: ferry, kind_detail: service }, kind: minor_road, $zoom: { min: 12, max: 13 } }
            draw:
                lines:
                    order: 14
                    color: rgb(224, 224, 224)
                    width: [ [12, 1px], [14, 1px], [15, 2px] ]

        minor-roads:
            filter: { not: { kind: ferry, kind_detail: service }, kind: minor_road, $zoom: { min: 13, max: 16 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(204, 204, 204)
                    width: [ [12, 1px], [14, 1px], [15, 2px] ]

        minor-roads-lowzoom:
            filter: { not: { kind: ferry, kind_detail: service  }, kind: minor_road, $zoom: { min: 16 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [16, 2px], [17, 4px], [20, 24px]  ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: 15
                        cap: butt

        minor-roads-lowzoom-bridge:
            filter: { not: { kind: ferry, kind_detail: service  }, kind: minor_road, is_bridge: true, $zoom: { min: 16 } }
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(255, 255, 255)
                    width: [ [16, 2px], [17, 4px], [20, 24px]  ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }
                        cap: butt

        minor-road-labels:
            filter: { not: { kind: ferry }, kind: minor_road, $zoom: { min: 17 } }
            draw:
                text:
                    line_exceed: 70%
                    articulated: true
                    spread_factor: 0.5
                    placement: one
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    collide: true
                    anchor: center
                    repeat_group: { kind: minor_road }
                    repeat_distance: 500px
                    #anchor: [top-left, top-right, bottom-left, bottom-right]
                    offset: [0px, 0px]
                    font:
                        size: 8pt
                        family: Open Sans
                        fill: rgb(110, 110, 110)
                        #weight: bold
                        order: 543
                        stroke: { color: rgb(247, 247, 249), width: 2 }       

        path-high: 
            filter: { kind: path, not: { footway: crossing }, $zoom: { min: 16 } } 
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(233,231,218)
                    width: [ [16, 1px], [17, 4px], [20, 10px]  ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: 15

        path-high-bridge: 
            filter: { kind: path, not: { footway: crossing }, is_bridge: true, $zoom: { min: 16 } } 
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: rgb(233,231,218)
                    width: [ [16, 1px], [17, 4px], [20, 10px]  ]
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round
                        order: function() { return feature.sort_rank; }

        sidewalk: 
            filter: { kind: path, footway: sidewalk , $zoom: { min: 16 } } 
            draw:
                lines:
                    order: 13
                    color: rgb(233,231,218)
                    width: 0px
                    join: round
                    cap: round
                    outline:
                        color: rgb(204, 204, 204)
                        width: 1.5px
                        join: round

#------------------------------------------------

    rail-lines:
        data: { source: mapzen , layer: roads}
        filter: { railway: rail, kind: rail, $zoom: { min: 14 } }
        draw:
            lines:
                order: 30
                collide: true
                width: 0.75px
                color: rgb(201, 201, 201)

        rail-lines-under:
            filter: { ailway: rail, kind: rail, $zoom: { min: 14 } }
            draw:
                rail-dashed-lines:
                        color: [0.75, 0.75, 0.75, 1.00]
                        order: 30
                        collide: true
                        width: 2px
                        join: round

    ferry:
        data: { source: mapzen , layer: roads}
        filter: { kind: ferry, $zoom: { min: 13 } }
        draw:
            ferry-dash:
                order: 20
                collide: true
                width: 1px
                color: rgb(201, 201, 201)

#------------------------------------------------

    buildings:
        data: { source: mapzen }
        filter: 
            any:
            - { $zoom: [13], scale_rank: [1,2] }
            - { $zoom: [14], scale_rank: [1,2,3] }
            - { $zoom: [15],   area: { min: 2000 } }
            - { $zoom: [16],   area: { min: 0 } }
            - { $zoom: [17],   area: { min: 0 } }
            - { $zoom: [18],   area: { min: 0 } }
            - { $zoom: [19],   area: { min: 0 } }
            - { $zoom: [20],   area: { min: 0 } }
            - { $zoom: [21],   area: { min: 0 } }
            - { $zoom: [22],   area: { min: 0 } }
            - { $zoom: [23],   area: { min: 0 } }
            - { $zoom: [24],   area: { min: 0 } }
        draw:
            polygons:
                order: 12
                color: rgb(244,237,226)
            lines:
                color: rgb(221,215,200)
                width: 2px
                order: 13